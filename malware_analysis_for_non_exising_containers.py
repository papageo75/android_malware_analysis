from create_docker_containers_for_mobsf import initialize_containers
from mobsf_api import Mobsf
from run_analysis_v1 import Instance, parallel_analysis
import time

#initialize containers with local ports and device identifiers for dynamic analysis (example is given for 6 containers)

instance1 = [{'8000': '8000', '1337': '1337'}, {'MOBSF_ANALYZER_IDENTIFIER': '192.168.154.113:5555'}]
instance2 = [{'8000': '8001', '1337': '1338'}, {'MOBSF_ANALYZER_IDENTIFIER': '192.168.154.116:5555'}]
instance3 = [{'8000': '8002', '1337': '1339'}, {'MOBSF_ANALYZER_IDENTIFIER': '192.168.154.115:5555'}]
instance4 = [{'8000': '8003', '1337': '1340'}, {'MOBSF_ANALYZER_IDENTIFIER': '192.168.154.114:5555'}]
instance5 = [{'8000': '8004', '1337': '1341'}, {'MOBSF_ANALYZER_IDENTIFIER': ''}]
instance6 = [{'8000': '8005', '1337': '1342'}, {'MOBSF_ANALYZER_IDENTIFIER': ''}]
container_instances = [instance1, instance2, instance3, instance4, instance5, instance6] #initialize_containers

API_keys = initialize_containers(container_instances)

#create http addresses for the containers based on the local ports, example is given for 6 containers

http1 = "http://localhost:8000" # "http://127.0.0.1:8000"
http2 = "http://localhost:8001" # "http://127.0.0.1:8001"
http3 = "http://localhost:8002" # "http://127.0.0.1:8002"
http4 = "http://localhost:8003" # "http://127.0.0.1:8003"
http5 = "http://localhost:8004" # "http://127.0.0.1:8004"
http6 = "http://localhost:8005" # "http://127.0.0.1:8005"

HTTP_list = [http1, http2, http3, http4, http5, http6]

MOBSF_list = []
MOBSF_instances = []

for i in range(6):
    MOBSF_list.append(Mobsf(HTTP_list[i], API_keys[i]))
    MOBSF_instances.append(Instance(f"instance{i+1}", MOBSF_list[i])) #arg for parallel analysis


directory_path = "" #path to the directory with the malware samples
destination_path = "" #path where the analyzed malware samples will be saved

print("Waiting for containers to start...")
time.sleep(30) # wait for containers to start
parallel_analysis(MOBSF_instances, directory_path, destination_path)
